/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.ups.practica06;

import ec.edu.ups.practica06.Archivo.ControladorArchivo;
import java.io.File;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Clock;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;

/**
 *
 * @author Personal
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    private ControladorArchivo controladorArchivo;

    public VentanaPrincipal() {
        initComponents();
        controladorArchivo = new ControladorArchivo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        btnListarArchivosOcultos = new javax.swing.JButton();
        btnListarDirectorios = new javax.swing.JButton();
        btnListarDirectoriosOcultos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tree = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTamano = new javax.swing.JTextField();
        txtPath = new javax.swing.JTextField();
        txtPermisosLectura = new javax.swing.JTextField();
        txtFechaModificacion = new javax.swing.JTextField();
        txtPermisosEscritura = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnMostrarInformacion = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuGestionarDirectorio = new javax.swing.JMenu();
        jMenuCrear = new javax.swing.JMenuItem();
        jMenuEliminar = new javax.swing.JMenuItem();
        jMenuRenombrar = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jDesktopPane1.setBackground(new java.awt.Color(204, 255, 255));
        jDesktopPane1.setForeground(new java.awt.Color(51, 51, 51));
        jDesktopPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnListarArchivosOcultos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnListarArchivosOcultos.setText("Listar Archivos Ocultos ");
        btnListarArchivosOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarArchivosOcultosActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btnListarArchivosOcultos, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));

        btnListarDirectorios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnListarDirectorios.setText("Listar Directorios");
        btnListarDirectorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirectoriosActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btnListarDirectorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 96, -1, -1));

        btnListarDirectoriosOcultos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnListarDirectoriosOcultos.setText("Listar Directorios Ocultos");
        btnListarDirectoriosOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirectoriosOcultosActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btnListarDirectoriosOcultos, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, -1, 20));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Ruta");
        jDesktopPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 24, 51, -1));
        jDesktopPane1.add(txtRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 29, 357, 32));

        Tree.setBackground(new java.awt.Color(255, 204, 255));
        Tree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(Tree);

        jDesktopPane1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 164, 236, 264));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setForeground(new java.awt.Color(255, 204, 204));

        jLabel2.setText("Path absoluto");

        jLabel3.setText("Tama√±o del archivo");

        jLabel4.setText("Permisos de lectura");

        jLabel5.setText("Permisos de escritura");

        jLabel6.setText("Fecha ultima modificacion");

        txtPermisosLectura.setText(" ");

        txtFechaModificacion.setText(" ");
        txtFechaModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaModificacionActionPerformed(evt);
            }
        });

        txtPermisosEscritura.setText("  ");
        txtPermisosEscritura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPermisosEscrituraActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Informacion:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPermisosLectura, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtTamano)
                            .addComponent(txtPath)
                            .addComponent(txtPermisosEscritura)
                            .addComponent(txtFechaModificacion)))
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPermisosLectura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPermisosEscritura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFechaModificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jDesktopPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 164, -1, -1));

        btnMostrarInformacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnMostrarInformacion.setText("Mostrar Informacion");
        btnMostrarInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarInformacionActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btnMostrarInformacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, -1, -1));

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jMenuBar1.setToolTipText("");

        jMenuGestionarDirectorio.setText("Gestionar Directorio");
        jMenuGestionarDirectorio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuCrear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuCrear.setText(" Crear");
        jMenuCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrearActionPerformed(evt);
            }
        });
        jMenuGestionarDirectorio.add(jMenuCrear);

        jMenuEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuEliminar.setText("Eliminar");
        jMenuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEliminarActionPerformed(evt);
            }
        });
        jMenuGestionarDirectorio.add(jMenuEliminar);

        jMenuRenombrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuRenombrar.setText("Renombrar");
        jMenuRenombrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRenombrarActionPerformed(evt);
            }
        });
        jMenuGestionarDirectorio.add(jMenuRenombrar);

        jMenuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuSalir.setText("Salir");
        jMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirActionPerformed(evt);
            }
        });
        jMenuGestionarDirectorio.add(jMenuSalir);

        jMenuBar1.add(jMenuGestionarDirectorio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrearActionPerformed
        if (Tree.getLastSelectedPathComponent() == null) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun archivo");
        } else {
            String nombre = JOptionPane.showInputDialog("Ingrese el nombre del archivo");
            File archivo = new File(txtRuta.getText());
            if (!archivo.exists()) {
                String ruta = txtRuta.getText();
                controladorArchivo.crearArchivo(ruta, nombre);

                JOptionPane.showMessageDialog(this, "Se ha creado el archivo con el nombre: " + nombre);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo crear");
            }
        }

    }//GEN-LAST:event_jMenuCrearActionPerformed

    private void txtPermisosEscrituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPermisosEscrituraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPermisosEscrituraActionPerformed

    private void txtFechaModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaModificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaModificacionActionPerformed

    private void btnListarDirectoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirectoriosActionPerformed
        if (txtRuta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado ningun path");
        } else {
            File archivo = new File(txtRuta.getText());
            if (archivo.exists()) {
                String url = txtRuta.getText();
                DefaultMutableTreeNode raiz = new DefaultMutableTreeNode(url);
                DefaultTreeModel treeModel = new DefaultTreeModel(raiz);
                Tree.setModel(treeModel);
                controladorArchivo.AbrirDirectorio(url, raiz);
            } else {
                JOptionPane.showMessageDialog(this, "El archivo no existe");
            }

        }

    }//GEN-LAST:event_btnListarDirectoriosActionPerformed

    private void btnMostrarInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarInformacionActionPerformed
        if (Tree.getLastSelectedPathComponent() == null) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun archivo");
        } else {
            DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) Tree.getLastSelectedPathComponent();

            TreeNode[] si = nodoSeleccionado.getPath();
            String path = "";
            for (TreeNode treeNode : si) {
                path = path + "/" + treeNode;
            }
            String pathF = path.substring(1);

            File archivo = new File(pathF);
            txtPath.setText(archivo.getAbsolutePath());
            txtTamano.setText(formatearTama√±oArchivo(archivo.length()));
            if (archivo.canRead()) {
                txtPermisosLectura.setText("Puede leer");
            } else {
                txtPermisosLectura.setText("No puede leer");
            }
            if (archivo.canWrite()) {
                txtPermisosEscritura.setText("Puede escribir");
            } else {
                txtPermisosEscritura.setText("No puede escribir");
            }
            Date yourDate = new Date(archivo.lastModified());
            DateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
            String formattedDate = formatter.format(yourDate);
            txtFechaModificacion.setText(formattedDate);
        }

    }//GEN-LAST:event_btnMostrarInformacionActionPerformed

    private void btnListarArchivosOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarArchivosOcultosActionPerformed
        if (txtRuta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado ningun path");
        } else {
            File archivo = new File(txtRuta.getText());
            if (archivo.exists()) {
                String url = txtRuta.getText();
                DefaultMutableTreeNode raiz = new DefaultMutableTreeNode(url);
                DefaultTreeModel treeModel = new DefaultTreeModel(raiz);
                Tree.setModel(treeModel);
                controladorArchivo.listarArchivosOcultos(url, raiz);
            } else {
                JOptionPane.showMessageDialog(this, "El archivo no existe");
            }

        }
    }//GEN-LAST:event_btnListarArchivosOcultosActionPerformed

    private void btnListarDirectoriosOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirectoriosOcultosActionPerformed
        if (txtRuta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado ningun path");
        } else {
            File archivo = new File(txtRuta.getText());
            if (archivo.exists()) {
                String url = txtRuta.getText();
                DefaultMutableTreeNode raiz = new DefaultMutableTreeNode(url);
                DefaultTreeModel treeModel = new DefaultTreeModel(raiz);
                Tree.setModel(treeModel);
                controladorArchivo.listarDirectoriosOcultos(url, raiz);
            } else {
                JOptionPane.showMessageDialog(this, "El archivo no existe");
            }

        }

    }//GEN-LAST:event_btnListarDirectoriosOcultosActionPerformed

    private void jMenuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEliminarActionPerformed
        if (Tree.getLastSelectedPathComponent() == null) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun archivo");
        } else {
            File archivo = new File(txtRuta.getText());
            if (!archivo.exists()) {
                DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) Tree.getLastSelectedPathComponent();
                TreeNode[] seleccionado = nodoSeleccionado.getPath();
                String path = "";
                for (TreeNode treeNode : seleccionado) {
                    path = path + "/" + treeNode;
                }
                String rutaFinal = path.substring(1);

                int i = JOptionPane.showConfirmDialog(this, "Estas seguro?");
                if (i == 0) {
                    JOptionPane.showMessageDialog(this, "Se ha eliminado el archivo");
                    controladorArchivo.eliminarArchivo(rutaFinal);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El archivo no existe");
            }
        }
    }//GEN-LAST:event_jMenuEliminarActionPerformed

    private void jMenuRenombrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRenombrarActionPerformed
   if (Tree.getLastSelectedPathComponent() == null) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun archivo");
        } else {
            File archivo = new File(txtRuta.getText());
            if (archivo.exists()) {
                String nombre = JOptionPane.showInputDialog("Ingrese el nombre a renombrar");
                DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) Tree.getLastSelectedPathComponent();
                TreeNode[] lista = nodoSeleccionado.getPath();
                String ruta = "";
                String rutaRen = "";
                for (TreeNode treeNode : lista) {
                    ruta = ruta + "/" + treeNode;
                }
                for (int i = 0; i < lista.length - 1; i++) {
                    rutaRen = rutaRen + "/" + lista[i];
                }
                String rutaRenombradaFinal = rutaRen.substring(1);
                String rutaFinal = ruta.substring(1);
                controladorArchivo.renombrarArchivo(rutaRenombradaFinal, rutaFinal, nombre);
             
                JOptionPane.showConfirmDialog(this, "Se ha renombrado el archivo a: "+nombre);

            } else {
                JOptionPane.showMessageDialog(this, "El archivo no existe");
            }

        }
    }//GEN-LAST:event_jMenuRenombrarActionPerformed

    private void jMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    public String formatearTama√±oArchivo(long tama√±oEnBytes) {
        if (tama√±oEnBytes < 1024) {
            return tama√±oEnBytes + " bytes";
        } else if (tama√±oEnBytes < 1024 * 1024) {
            double tama√±oEnKB = tama√±oEnBytes / 1024.0;
            return formatearDecimal(tama√±oEnKB) + " KB";
        } else if (tama√±oEnBytes < 1024 * 1024 * 1024) {
            double tama√±oEnMB = tama√±oEnBytes / (1024.0 * 1024);
            return formatearDecimal(tama√±oEnMB) + " MB";
        } else {
            double tama√±oEnGB = tama√±oEnBytes / (1024.0 * 1024 * 1024);
            return formatearDecimal(tama√±oEnGB) + " GB";
        }

    }

    public String formatearDecimal(double n√∫mero) {
        DecimalFormat formato = new DecimalFormat("#.##");
        return formato.format(n√∫mero);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree Tree;
    private javax.swing.JButton btnListarArchivosOcultos;
    private javax.swing.JButton btnListarDirectorios;
    private javax.swing.JButton btnListarDirectoriosOcultos;
    private javax.swing.JButton btnMostrarInformacion;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCrear;
    private javax.swing.JMenuItem jMenuEliminar;
    private javax.swing.JMenu jMenuGestionarDirectorio;
    private javax.swing.JMenuItem jMenuRenombrar;
    private javax.swing.JMenuItem jMenuSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFechaModificacion;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtPermisosEscritura;
    private javax.swing.JTextField txtPermisosLectura;
    private javax.swing.JTextField txtRuta;
    private javax.swing.JTextField txtTamano;
    // End of variables declaration//GEN-END:variables
}
